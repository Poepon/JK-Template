@using Abp.Configuration.Startup
@using Abp.Web.Mvc.Alerts
@using Abp.Web.Security.AntiForgery
@using JK
@using JK.Configuration
@using JK.Web.Views.Shared.Components.SideBarNav
@using JK.Web.Views.Shared.Components.SideBarUserArea
@using JK.Web.Views.Shared.Components.TopBarLanguageSwitch
@using JK.Web.Views.Shared.Components.RightSideBar
@inject IAbpAntiForgeryManager AbpAntiForgeryManager
@inject IMultiTenancyConfig MultiTenancyConfig
@inject IAlertManager AlertManager
@{
    Layout = null;
    AbpAntiForgeryManager.SetCookie(Context);
    var uiTheme = await SettingManager.GetSettingValueAsync(AppSettingNames.UiTheme);
}
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
    <meta name="description" content="">
    <meta name="author" content="">

    <link rel="shortcut icon" href="~/favicon.ico">

    <title>JK</title>

    @await Html.PartialAsync("_ImportStyles")
    <!-- View specific styles -->
    @RenderSection("styles", required: false)
    <script type="text/javascript">
        // This is used to get the application's root path from javascript. It's useful if you're running application in a virtual directory under IIS.
        var abp = abp || {};
        abp.appPath = '@ApplicationPath';
    </script>

</head>
<body class="@("theme-" + uiTheme)">

    <!-- Page Loader -->
    <div class="page-loader-wrapper">
        <div class="loader">
            <div class="preloader">
                <div class="spinner-layer pl-red">
                    <div class="circle-clipper left">
                        <div class="circle"></div>
                    </div>
                    <div class="circle-clipper right">
                        <div class="circle"></div>
                    </div>
                </div>
            </div>
            <p>@L("PleaseWait")</p>
        </div>
    </div>
    <!-- #END# Page Loader -->
    <!-- Overlay For Sidebars -->
    <div class="overlay"></div>
    <!-- #END# Overlay For Sidebars -->
    <!-- Search Bar -->
    <div class="search-bar">
        <div class="search-icon">
            <i class="material-icons">search</i>
        </div>
        <input type="text" placeholder="@L("StartTyping")...">
        <div class="close-search">
            <i class="material-icons">close</i>
        </div>
    </div>
    <!-- #END# Search Bar -->
    <!-- Top Bar -->
    <nav class="navbar">
        <div class="container-fluid">
            <div class="navbar-header">
                <a href="javascript:void(0);" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar-collapse" aria-expanded="false"></a>
                <a href="javascript:void(0);" class="bars"></a>
                <a class="navbar-brand" asp-controller="Home" asp-action="Index"><i class="fa fa-cubes"></i> JK</a>
            </div>
            <div class="collapse navbar-collapse" id="navbar-collapse">
                <ul class="nav navbar-nav navbar-right">
                    <!-- Call Search -->
                    <li><a href="javascript:void(0);" class="js-search" data-close="true"><i class="material-icons">search</i></a></li>
                    <!-- #END# Call Search -->
                    @await Component.InvokeAsync(typeof(SideBarUserAreaViewComponent))
                    @await Component.InvokeAsync(typeof(TopBarLanguageSwitchViewComponent))

                    <li class="pull-right"><a href="javascript:void(0);" class="js-right-sidebar" data-close="true"><i class="material-icons">more_vert</i></a></li>
                </ul>
            </div>
        </div>
    </nav>
    <!-- #Top Bar -->
    <section>
        <aside id="leftsidebar" class="sidebar">


            @await Component.InvokeAsync(typeof(SideBarNavViewComponent), new { activeMenu = ViewBag.CurrentPageName })

            <!-- Footer -->
            <div class="legal">
                <div class="copyright">
                    &copy; @DateTime.Now.Year <a href="javascript:void(0);">JK</a>.
                </div>
                <div class="version">
                    <b>@L("Version") </b> @AppVersionHelper.Version [@AppVersionHelper.ReleaseDate.ToString("yyyyMMdd")]
                </div>
            </div>
            <!-- #Footer -->
        </aside>

        @await Component.InvokeAsync(typeof(RightSideBarViewComponent))

    </section>

    <section class="content">
        <div class="container-fluid">
            @if (AlertManager.Alerts.Any())
            {
                <div id="AbpPageAlerts">
                    @foreach (var alertMessage in AlertManager.Alerts)
                    {
                        <div class="alert alert-@alertMessage.Type.ToString().ToLower() @(alertMessage.Dismissible ? "alert-dismisable" : "")" role="alert">
                            <h4 class="alert-heading">
                                @alertMessage.Title
                                @if (alertMessage.Dismissible)
                                {
                                    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                }
                            </h4>
                            <p>@alertMessage.Text</p>
                        </div>
                    }
                </div>
            }

            @RenderBody()
        </div>
    </section>

    @await Html.PartialAsync("_ImportScripts")
    <!-- View specific scripts -->
    @RenderSection("scripts", required: false)
</body>
</html>
